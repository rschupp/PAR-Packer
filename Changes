1.059  2023-07-20

- correctly propagate the exit value of a packed executable
  
  Get the exit value from perl_destruct() instead of perl_run().
  These may be different, e.g. if the value of $? is set in an END block.

- clean up tests a bit
- set up GitHub CI and add cpanfile (for CI only)
- check more return codes in myldr/*.c

1.058  2023-06-12

- patch DynaLoader.pm to make intercepting DynaLoader::bootstrap work again
  for Perl >= 5.35 on Windows (see #74)
  
  $do_expand was changed in perl 5.36 from an (implicit) "local" variable
  to "my". This breaks how PAR::Heavy intercepts calls to
  DynaLoader::bootstrap: monkey-patching DynaLoader::bootstrap,
  DynaLoader::dl_findfile and DynaLoader::bootstrap while setting
  "local $DynaLoader::do_expand = 1".

- reorganize modules etc used in tests
- add test to run an XS module from a .par file
- add a test for loading XS "glue" DLLs

- remove unused code for packed DLLs ("pp --link ...")
  - nobody packs (non-XS) DLLs as embedded "FILE"s
  - nobody uses a $Config{version) sub directory when packing DLLs below
    "shlib/" in the zip

1.057  2022-11-29

- use a different method to mark executable built from "pp --clean ..."
  
  - scripts/par.pl: don't patch the string "__PASS_PAR_CLEAN__               \0" in the
    "boot" section of the executable and ...
  - myldr/boot.c: ... stop looking for the patched string
  - scripts/par.pl: add "\0CLEAN" in lieu of "\0CACHE" (and drop the 40-byte
    cache name below that) in the "trailer" section when generating a packed
    executable when META.yml indicates "--clean" was specified)
  - myldr/mktmpdir.c: allow "\0CLEAN" as an alternative to "\0CACHE"
    and set PAR_CLEAN=1 in that case
  - myldr/mktmpdir.c: implement find_par_magic() akin the one in script/par.pl

- better CLT detection in MacOS (#70) [plk <Philip@kime.org.uk>]

- use Getopt::ArgvFile with resolveEnvVars=1 
  suggested by Johan Vromans (@sciurius on GitHub)

1.056  2022-09-05

- Fix #66: patch myldr/boot for "pp --clean ..." without side effects
  
  - make sure myldr/boot contains exactly one string of the form
    "__PASS_PAR_CLEAN__               \0" so that there are no
    duplicates that may get split on chunk boundaries
    (myldr/boot_embedded_files.c)
  - simplify patching of this string (in $loader) to
    "__PASS_PAR_CLEAN__=1             \0" in script/par.pl
  - add a test for #66 (check for ephemeral vs persistent cache directory)

- Revert "Fixes #62: rs6000_71 (AIX) "An offset in the .loader section header is too large.""
  
  PAR_CLEAN is set too late: at this point PAR_TEMP has already
  been set (and populated) to a persistent cache directory
  (/tmp/par-USER/cache-SHA1) instead of an ephemeral one (/tmp/par-USER/temp-PID).

- Some code cleanup
  - replace some magic numbers with constants
  - use string interpolation (instead of concatenation)
  - clean up some convoluted C code

1.055  2022-07-03

- Fix #62: rs6000_71 (AIX) "An offset in the .loader section header is too large."
  
  Communicate pp option "--clean" to the generated executable in a
  different way. Previously this was done by patching "__ENV_PAR_..." strings
  **in the executable being built** and interpreting these strings in
  par.pl **at runtime**. Though hacky, this seemingly worked on any OS
  (without rendering the executable invalid).
  But the only information ever passed was the value of PAR_CLEAN and this was
  gleaned at build time from the value of JSONPath $par.clean from META.yml
  in the zip (set by pp by option "--clean").
  Instead read and interpret "META.yml" in par.pl **at runtime**.

- Fix: merge PR #58 from Philip@kime.org.uk:
  
  Adding support for running MacOS Universal binaries created via 'lipo'
  from already pp'ed and signed thin binaries

- Make writing stuff more robust: check return value of print() 
  and close() in some places.

1.054  2022-01-27

- Temporarily disable t/90-gh41.t (system("\\\\?\\some-absolute-path") fails)

1.053  2022-01-25

- Fix: merge PR #56 from from Philip Kime <Philip@kime.org.uk>:
  Updating OSX codesign fix util with fix for automatically added ad-hoc signatures on OSX 12+

- Fix: merge PR #42 from Andrew-Kulpa/master:
  Get exe size from file handle instead of path

- Fix: prevent TABs in literal makefile fragments from being expanded

- Cleanups:
  - par_findprog(): pass a copy of argument `pathÂ´ to strtok()
  - simplify searching for PAR magic
  - consolidate die()s
  - add a test for GitHub #41
  - add error message when exec'ing the custom perl fails in myldr/boot
  - untangle %require_list and %ModuleCache

1.052  2021-01-13

- add note that --filter and __DATA__ are incompatible (cf. #36, #39)

- change bugtracker to GitHub issues

- when embedding FILEs, normalize paths in @INC

- code cleanup:
    - rename _tempfile() to _save_as()
    - there is no $PAR::Heavy::ModuleCache, so make it a "my" variable
    - consistent formatting in outs() calls
    - demystify reading <$fh> with $/ = \$number: use "read $fh, $buf, $number" instead
    - use "open $fh, '<:raw', ..." instead of "open $fh, '<', ...; binmode($fh);"
    - make error messages more consistent

- make extract-embedded.pl more robust

- t/90-rt129312.t fails when Archive::Unzip::Burst is used

1.051  2020-11-29

- Fix #27: "pp -u broken in perl 5.32"
  ignore "pp -u ..." (with a warning) for Perl >= 5.31.6

- Fix #25: unexpected interaction between pp options "--compile" and "--module Foo::"
  scan_deps_runtime() is called for all detected Foo:: modules, but
  modules by themselves are typically not suitable for dynamic scanning
  (causing lots of spurious warnings for "--compile").

- cleanup argv handling in myldr/main.c

- placate cperl ("Attempt to change hash while iterating over it.")

1.050  2020-03-18

- Rethink use of Filter::PodStrip.

  Do not add directives

  #line 1 "file"

  to packed modules except for "embdeded" files.
  We still add these directives to "embedded" files as these are extracted
  with mangled names which makes it hard to make sense of warn() or die() messages
  caused by them. These are all core modules and don't reference __FILE__.

  This should make use of __FILE__ in packed modules work without
  workarounds. __FILE__ is typically used to refer to installed non-module
  resources, e.g.

    # MIME::Types
    my $db = File::Spec->catfile(dirname(__FILE__), 'types.db');

    # Mozilla::CA
    my $ca_file = File::Spec->catfile(dirname(__FILE__), "CA", "cacert.pem");

    # Mojo::File (__FILE__ used implicitly by caller())
    sub curfile { __PACKAGE__->new(Cwd::realpath((caller)[1])) }

  Hence, remove known workarounds from Filter::PatchContent and add a test.

- Fix RT#130685: core module detection doesn't work with -Duserelocatableinc

  Original patch by Frank.Lichtenheld@Sophos.com, thanx!
  Added a test for this.

1.049  2019-05-31

- Fix RT#129312: Code signing for OSX

  Avoid Archive::Zip::Archive error "can't find EOCD signature" for pp'ed
  executables with lots of stuff appended (e.g. by OSX codesign).

  Note: This requires the corresponding fix in PAR in 1.016,
  hence bump its required version.

  Add a test by appending 512 kB to a pp'ed executable.

- Fix issue GitHub#15 (doesn't build with a relocatable version of perl)

  If the perl used to build PAR::Packer is a relocatable perl,
  i.e. it was build with -Duserelocatableinc, then myldr/par will
  also be relocatable. Hence, the automagical default @INC for myldr/par
  is something like ("myldr/../lib/5.x.y",
  "myldr/../lib/site_perl/5.x.y", ...) which won't find any modules.

1.048  2019-04-29

- Fix RT#129312: Code signing for OSX

  Apply pull request from Philip Kime, adds a small program that will fix up
  an executable generated by pp so that MacOS codesigning will accept it,
  see contrib/pp_osx_codesign_fix/pp_osx_codesign_fix.c

  Since codesigning will append currently ~180 KB to an executable, increase the
  offsets from the end of the file where Archive::Zip and PAR::Packer will
  look for their respective signatures.

- Fix GitHub issue #12: sha1.c warnings due to inconsistent USE_64_BIT_INT

  Do not "inline" sha1.c (into main.c and boot.c vi mktmp.c), instead
  just link to it. There's no reason that callers of
  sha_init/sha_update/sha_final should know about the implementation of SHA_INFO.

  myldr/sha1.c: stop including perl.h etc, instead pass the necessary #define's
  via the compile command

- Fix GitHub issue #13: `par.exe -b` failure with Portable::Config

  Note to users of Strawberry Perl *portable* installations:
  There's a bad interaction between a Strawberry *portable* installation if you
  also have a *standard* Strawberry installation installed in C:\strawberry.
  Under certain conditions, parl created by the portable installation
  may have have a built-in @INC of [ C:\strawberry\perl\lib, C:\strawberry\perl\site\lib,
  C:\strawberry\perl\vendor\lib ], i.e. pointing to the *standard* installation.
  This will cause it to load modules from the *standard* installation. If the versions
  of the two installations are different, this may cause weird failures.

- Always require Digest::SHA, remove ugly alternatives

- Make "pp -e 0" work, apparently nobody noticed

1.047  2018-08-19

- Disable failing test cases in (Windows only) test t/90-rt122949.t

- Add .SEQUENTIAL to force non-parallel build when using dmake (e.g. on Windows)

1.046  2018-08-18

- Fix RT#126280: 90-rt122949.t fails when "Use Unicode UTF-8 for worldwide language support" is enabled

- Fix https://github.com/rschupp/PAR-Packer/issues/7 "Parallel build rules dependancy problem"

  Instead of fighting GNU make and EUMM, just punt and add a .NOTPARALLEL
  target. Yeah, I know that this is specific to GNU make (though some
  other make implementations support it, too).

- Add bugtracker to META.yml

1.045  2018-06-12

- Fix RT#125503: Fix build with 64-bit perl-5.28.0

  Merged patch by Steve Hay, thanks!

1.044  2018-06-06

- Cope with the fact that PL_statbuf is gone since Perl 5.27.x.

  This breaks PAR::Packer on systems where Perl's "Stat_t" is not
  the same as "struct stat", notably Windows.

- Extract-embedded.pl: list (but not extract) the embedded files
  if no directory is given

- Use the long option name "--link" in messages (as "-l" may easily be
  confused with "-I" when view in a sans serif font).

1.043  2018-04-03

- Fix test failures on Windows

1.042  2018-04-02

- Fix PAR-Packer#5 "unintended glob expansion on strawberry win32?"

  On Windows using Mingw set _CRT_glob=0 also in parl (the custom
  Perl interpreter).

- Fix RT #124445 "Par-Packer 'falsifies' PerlTk server() and Win32 GetOSName() and GetOSVersion() output on Windows 10"

  Add <compatibility> section to pp.manifest
  (cf. https://msdn.microsoft.com/en-us/library/windows/desktop/dn481241(v=vs.85).aspx)
  to make par.exe "Windows 10 aware".

- Add dependencies on stuff in myldr/winres to myldr/Makefile

- Fix parallel make: install modules into blib *before* recursing into "myldr"

1.041  2017-11-08

- Fix problem with --link libraries on MacOS
  - libraries where packed into the wrong location in the zip
  - hence they were not extracted into the cache area where they could
    be found via DYLD_LIBRARY_PATH
  - hence the packed executable either couldn't find them or found incompatible
    versions outside the cache area
  - reported by Phil Kime

1.040  2017-10-21

- no changes to modules and scripts, only fixes for configure, build and test

- require a version of IPC::Run3 that gets shell quoting on Windows right

- restructure how we find the files to embed into boot.c

- avoid an error with newer gcc: "error: 'for' loop initial declarations
  are only allowed in C99 or C11 mode"

- fix tests when running without "." in @INC even (even in tests)

1.039  2017-09-28

- Brown paper bag: add missing t/utils.pl

1.038  2017-09-27

- Fix "RT#122949: PAR-Packer-1.37 executables split arguments containing whitespace"
  - on Windows, quote elements of argv array passed to spawnvp();
    algorithm stolen from Win32::ShellQuote.

- introduce helper t/utils.pl to streamline tests

- require IPC::Run3 for test

- make test work with "dot-less" perl and PERL_USE_UNSAFE_INC=0

1.037  2017-05-28

- Fix RT#121268 for PAR-Packer: error installing PAR-Packer on windows10 ( 64Bit )
  - on Windows, make dl_findfile() search first in the directory containing
    the perl executable (to avoid erroneous hits in other members of PATH)

- Fix RT#120038: [PATCH] Fix build for VS2015 (VC++ 14)
  and merge pull request from Steve Hay (shay@cpan.org)
  - makes PAR::Packer work with VisualStudio 2015. Thanks, Steve!

- Fix RT#120041: --exclude gets confused by missing modules
  - guard against Module::ScanDeps::_find_in_inc() returning ()

- Fail early when packing with a version of Perl
  that's different frome the one PAR::Packer was built with.

  Scenario: User has built and installed PAR::Packer (or got it
  pre-packaged), then installs a newer version of Perl, then does

    pp -o foo.exe foo.pl

  But running foo.exe then fails with

    foo.exe

    C:\Users\jon\AppData\Local\Temp\parlzcPb.exe: Perl lib version (5.24.1) doesn't match executable 'perl.exe' version (5.24.0) at C:/Perl64/lib/Config.pm line 62.
    Compilation failed in require at C:/Perl64/lib/Errno.pm line 10.
    ...
    C:\Perl64\site\bin/pp: Failed to extract a parl from 'PAR::StrippedPARL::Static' to file 'C:\Users\jon\AppData\Local\Temp\parl3swwQJc.exe' at C:/Perl64/site/lib/PAR/Packer.pm line 1184, <DATA> line 1.

  Now, pp will fail and with a more useful message.

- Switch from Module::Install to ExtUtils::MakeMaker

- Rewrite the library search (for "pp --link ...")
  - start with $Config{libpth} which is *not* the runtime loader (e.g.
    ld.so on Linux) search path, but rather the linker (ld) search path -
    but it's the best guess without having to grok /etc/ld.so.conf
  - augment that with $ENV{LD_LIBRARY_PATH} or similar

- Rework how we determine the name under which a library should be installed
  - use objdump (on Linux and other ELF-based OS) and otool on Darwin
  - fall back to "chasing symlinks" otherwise

- Remove PAR_ARGV_*, PAR_ARGC stuff from script/par.pl and myldr/boot.c.
  - Dunno what problem this obscure way of passing the command line arguments
    from a packed executable to the custom Perl interpreter was intended
    to fix, but arguments pass just fine through execvp (or spawnvp)
    to perl_parse.

- Only set the environment variable for the shared library search path
  (e.g. LD_LIBRARY_PATH) that is relevant for the operating system
  that we're running on

- Use DynaLoader::dl_findfile to locate DLLs instead of homegrown stuff.

- Remove "par_base" - prebuilt .par's haven't been available for ages

1.036  2016-12-29

- Fix RT#118094: Race condition exists when building cache for pp built executables
  - guard against concurrent extraction attempts
  - bump "requires" on PAR to a version with additional guards

- Fix RT#118903: Does not install when '.' is not in @INC
  - apply patch from Graham Ollis (PLICEASE), thanks!
  - make the Module::Install stuff work in the "author" case
    NOTE: "use lib '.'" does *not* work in this case

- Move to GitHub. Thanks, OpenFoundry, for years of service.
  - add Perl_5 LICENSE file, make "repository" point to GitHub
  - always refer to the included LICENSE file
  - point bug reports to bug-par-packer@rt.cpan.org
  - add an empty file "inc/.author/.keep" as Git doesn't track empty
    directories

- Fix RT #118053: Problem with packed perl archive for biber on 64-bit Cygwin
  - embed cygcrypt-0.dll since it isn't (anymore) in the set of
    default Cygwin packages

- Upgrade to Module::Install 1.17

1.035  2016-07-23

- Fix RT#116254: Compilation error under strawberry perl 5.24 x64

  s/PP_VERSION/PAR_PACKER_VERSION/ as Strawberry Perl also defines
  PP_VERSION (in c/x86_64-w64-mingw32/include/wincrypt.h)

1.034  2016-07-17

- Fix RT#116056: Fixes for Cygwin build of PAR::Packer
  - detect whether we're using a 32-bit or 64-bit perl
  - fix elision of "-l<perl lib>" from $static_ldflags
  - add $static_ldflags back to $boot_ldflags

- Add information to packed executable about which version
  of PAR::Packer was used to build it (suggested by Johan Vromans):
  - accessible from the packaged Perl script as $PAR::Packer::VERSION
  - by looking for the string "Packed by PAR::Packer ..." in the executable
    itself (using "strings exe | grep ..." or the like)

- Use ldd on cygwin, too
  - NOTE: a "system lib" on cygwin is either in /usr/bin
    or a Windows "system lib"

1.033  2016-05-19

- Fix RT#114229: v1.32 still won't install on strawberry perl v5.22.2

  This is actually a problem caused by (some) newer versions of
  ExtUtils::MakeMaker.

- Drop the "re-exec myself" in myldr/internals.c, may cause problems
  on machines with low argv+env limits; the reason for this execvp()
  is unknown and it's only relevant for standalone invocations of parl,
  anyway (ie. NOT when running a packed executable)

- Really suppress generation of myldr/MYMETA.* and don't install
  man pages for myldr/{Dynamic,Static}.pm (nothing there to see anyway).

1.032  2016-05-07

- Unbreak PAR::Packer for Perl 5.23.9 and higher:
  Perl 5.23.9 removed the keys starting with "_<" from %::
  script/par.pl used to glean the DLLs loaded via require_modules()
  from these keys; replace them with @DynaLoader::dl_shared_objects.

- Fix RT#114155: Makefile.PL error - not loading ExtUtils::MakeMaker

- extract-embedded.pl: show starting offset of embedded files

1.031  2016-04-10

- Fix RT#113618: Strange issue with not packing libperl.dylib
  Restore guessing what files to embed in myldr/Makefile.PL,
  but make myldr/embed_files.pl ignore this list if it knows
  a better way to determine these files. Also use "otools -h" on
  OSX, as "otool --version" doesn't work on older versions of OSX.
  Thanks to Phil Kime for help in investigating this.

- Implement namespace options for "-M" like ActiveState's perlapp:
  pp now accepts "-M Foo::", "-M Foo:*" and  "-M Foo:**".
  Bump requirements for Module::ScanDeps to 1.21 for the helper
  function to implement this.

- Fix RT#113463: Fix spelling error in manpage
  Applied patch from the Debian Perl group. Thanks, guys!

1.030  2016-03-29

- Fix RT#111455: unable to use -x and -u with pp
      RT#110480: Unpacking exe: File exists

  Do not add %Preload dependencies of "-M" arguments to the list
  of input files, this causes several problems (and doesn't gain anything).

- Fix RT#111896: PAR Question Solaris 10

  Link myldr/boot only with what's actually required.

  Move detection of libraries that should be embedded into myldr/boot
  from myldr/Makefile.PL into myldr/embed_files.pl.
  Get rid of guessing the shared libraries our custom Perl interpreter
  is linked with (and hence have to be packed into boot_embedded_files.c) -
  at least on platforms where we know how to determine the shared libraries
  required by an executable:
  - use "ldd" on Linux, Solaris and BDSs
  - use "otool -L" on Mac OS X if available
  - use "objdump -ax" on Windows if available (when using the Mingw toolchain)

- file2c.pl: switch back from array of unsiged to (hex encoded) strings.
  At least for gcc, the former is much harder on the compiler, both
  in CPU time and memory consumption.

- Skip a test if Archive::Unzip::Burst is detected (this messes up expected
  mtimes for extracted files).

- Make a test work with early versions of Perl 5.8.x (x < 9) that have a bug
  with compiled regexes and the /m modifier.

1.029  2016-01-12

- Add option "-u" ("--unicode") to pp to explicitly package Unicode support

- Remove all references to http://par.perl.org/, doesn't exist anymore

- Remove Internals::PAR::CLEARSTACK - it hasn't been enabled for ages,
  causes segfaults if enabled and doesn't even compile with perl > 5.23.6

1.028  2015-11-19

- Fix RT#109123: v1.027 tests are not passed under windows
  Apparently, even when called with a list, system() on Strawberry Perl
  on Windows has a problem with arguments containing double quotes,
  hence avoid them.

1.027  2015-11-18

- Add option -M Foo::Bar:: to pp (note the trailing double colon):
  it adds Foo/Bar.pm and anything below Foo/Bar.

  Bump required Module::ScanDeps version for
  Module::ScanDeps::add_preload_rule() to implement this.

- Fix RT#109110: Incompatible with Module::ScanDeps 1.20

1.026  2015-07-19

  - Fix RT#101800: [PATCH] Reinstate files to inc dir if deleted by external process

    - The actual fix is in PAR (cf r1584) (add a "canary" file),
      bump the required version of PAR, add a test.

  - Find the "\nPAR.pm\n" signature in a .par (or packed executable)
    even if it's not at end of the file (algorithm stolen from Archive::Zip's
    search for the EOCD signature).

     - This is intended to help code signing which may add stuff at the
       end of the executable.

  - Fix RT#104635 for PAR-Packer: IO error the first time an executable built by the packer is run on OSX

  - Fix RT#104509: Problem signing PAR file,
    and RT#104560: [PATCH] list added files in manifest

    - Apply (slightly modified) patch by Shawn Laffan (SLAFFAN@cpan.org)
      from RT#104560. Thanks, Shawn!

  - Make MIME::Types work "out of the box"

    - pack its data file MIME/types.db
    - patch the code to read MIME/types.db
    - bump required version of Module::ScanDeps
      (needed for MIME::Types %preload rule and fix for handling of
      "open FH, '<:encoding(utf8)', ..." since that's what MIME::Types does)

  - Bump requirement on PAR (for the fix for RT #103861), add a test.

  - Update tkpp ito 1.5:
    - using -M will now work (the current directory added in @INC)
    - tkpp delete and test building file.

  - Make pp fail when an unknown option is encountered.

  - Remove PAR::Packer::_append_parl(), not called anywhere.

  - Add license; update repository OpenFoundry repository URL

1.025  2015-01-24

  - Fix PAR::Packer "make test" problem with Strawberry Portable

  - Fix for PAR-Packer 1.024 with a nonstandard libperl.so name
    Patch from markus.jansen@ericsson.com, thanks!

  - Fix #101662: Prevent shared libs from being cached in memory on AIX
    Applied patch from Thoke@northpeak.org, thanks.
    Note: this is one half of the fix, the other is in PAR

1.024  2014-11-07

  - Fix RT #99231: Problem with PAR::Packer 1.022 on Perl 5.20.1 and earlier.
    Correct a typo to really fix this bug.

1.023  2014-11-02

  - Fix RT #99231: Problem with PAR::Packer 1.022 on Perl 5.20.1 and earlier.
    Add libwinpthreads*.dll to embedded files (used on recent
    Strawberry builds). Patch by sergio.fanchiotti@standardandpoors.com, thanks!

  - Fix RT #63939: The behaviour of "pp --link ..." is subtly different between OSX and Linux.
    Applied patch from lamprecht@cpan.org, thanks!

  - Bump required version of Module::ScanDeps,
    makes t/90-rt59710.t pass again on perl 5.21.x

  - die if a requested shared library (option -l) can't be found.

  - Add a patch rule so that Mozilla::CA finds its (extracted) cacert.pem file.

  - Rename ChangeLog file to Changes and reformat it
    according to CPAN::Changes::Spec.

  - Upgrade to Module::Install 1.14.

1.022  2014-09-19

  - Fix RT#98955: installation fails | Can't locate String/ShellQuote.pm

    Revert the fix for RT#98791: In order to be fullfilled at "perl Makefile.PL"
    {String,Win32}::ShellQuote would need to be in the _distributed_
    META.yml as "configure_require".  But this can't handle arch-specific
    "configure_require"s and we can't require _both_ as Win32::ShellQuote
    won't build on *nix systems.

  - Simply enclose the filenames in double quotes, should work on both
    *nix and Windows in all reasonable scenarios.

  - Drop incorrectly specified 'Digital signature support' "feature": simply
    "recommends" the required modules.

1.021  2014-09-14

  - Fix #98791: PAR-Packer fails to build with DWIMPerl/Strawberry Perl due to unquoted path name

    - quote the list of embedded file wrt OS native shell
    - require Win32::ShellQuote on Windows and String::ShellQuote otherwise

1.020  2014-08-24

  - Implement option --xargs for pp:
    - splits value of --xargs using Text::ParseWords::shellquote
    - passes result as @ARGV when running script for -x
    - bump required version of Module::ScanDeps to the first to implement this

  - Update to Module::Install 1.10

1.019  2014-07-07

  - Fix RT #96288: PAR::Packer unable to build under Win32/ActivePerl v5.14.2
        RT #96739: "bsd_glob" is not defined on perl 5.14.x and earlier
        RT #97018 (Issue while upgrading PAR::Packer )

    Don't "use File::Glob ':bsd_glob'":
    - this remaps CORE::glob() to File::Glob::bsd_glob() globally, but some
      versions of ExtUtils::MakeMaker rely on CORE::glob() legacy behaviour
    - the tag :bsd_glob isn't exported in Perl <= 14.2
    - explicitly call File::Glob::bsd_glob() instead of glob()

  - Fix RT #59224 (make error with version 1.006 on aix 5.3)

    The string contents of myldr/my_par_pl.c (generated from
    script/par.pl by myldr/par_pl2c.pl) is passed in argv[]
    during the build. This is too large for the default limit (24k)
    that AIX 5.3 has for passing argv+env in execve().
    Shrink it a bit by removing leading whitespace and comment-only lines
    (in addition to using PAR::Filter::PodStrip).

  - Update documentation wrt the name of the cache directory.

1.018  2014-05-18

  - [DJIBEL] tkpp 1.4 : Since PAR::Packer 1.015, tkpp doesn't work.
    I Removed --icon and --info options. Now tkpp work.

  - Bug fixes:

    Use bsd_glob() instead of glob() to avoid problems with patterns that
    contain whitespace, e.g. "C:\\Program Files\..." on Windows.
    Found by Victor Wheeler <vaw_info999@comcast.net>.

    Fix RT #93008: install failure with ubuntu / puppet
    (and several similar ones): When building on a Debian derived Linux distro
    (and building with the system perl) check that distro package "libperl-dev"
    is installed.

1.017  2013-12-01

  - Fix RT #84588: OSX: incorrect detection of gcc (unsupported option '-static-libgcc'),
        RT #90198: PAR::Packer fails to compile in Mac OS X 10.9 Mavericks,
        RT #91086: PAR-Packer-1.016 fails to install on OSX)

    - clang on OSX pretends to be gcc, but doesn't implement gcc's option "-static-libgcc"
    - use this option only on Windows (when using the MingW toolchain).

  - Drop a test that was using Inline::C just to wrap native execvp().
    - It caused failures on CPAN Testers (if accidentally Inline was
      installed) that were unrelated to PAR::Packer.

1.016  2013-11-30

  - Fix RT #90870: Segmentation fault (core dumped) (MooX::Options)
    - any "die" in a packed executable causes the executable to segfault
      (at least on Linux and Perl 5.18.1)
    - remove a line from XS code that sets an internal perl variable

1.015  2013-10-09

  - featurectomy: remove --icon and --info options from pp and PAR::Packer
    - they don't work on some versions of Windows (result in corrupted executables)
    - these options are just passed on to Win32::Exe, so you may simply
      post-process the executable, e.g. using exe_update.pl from Win32::Exe

  - Fix RT #82916: Terminating during unpack results in corrupted cache, failure on next start
    - apply (slightly modified) patch from shutton@pobox.com, thanks!

  - Fix RT #88297 (-M crashes pp if option contains backslashes)
    - _add_file(): do _not_ use $zip->memberNamed(...) to refer to the just added
      Archive::Zip::Member; instead use the return value of $zip->addFile or
      $zip->addString

  - don't modify embedded files after initial extraction
    - fixes bug (on Windows) reported by Ken Tuchman <tuchman@t-online.de>

  - minor changes
    - use File::Spec::Functions, get rid of ugly File::Spec->... calls
    - set $pre_res using catfile() instead of hardcoding a backslash;
      this might help on Cygwin
    - fix -Mblib option for run_with_inc.pl: we want the blib in the top level directory

1.014  2012-12-21

  - tkpp 1.3 : --addfile option in GUI updated :
    - now it is possible to set a new filename or dirname in package
      using (old;new).

  - Bug fixes, etc.

      - RT #75636: PAR::Packer Windows installation error (and suggested fix)
        - apply PAR-Packer-1.013_V2.diff from above bug report

      - Some versions of GCC link myldr/boot.exe with libgcc*.dll;
        this renders any packed executable non-portable to machines
        that don't have (this version of) libgcc*.dll installed
        (problem reported by chandrashekaran_kannan@hotmail.com);
        to fix add '-static-libgcc' to the command for linking
        boot.exe (when using the GCC toolchain)
      - This also uncovered the following problem:
        on some platforms (e.g. ActiveState + MingW) ldopts()
        may contain a spurious trailing newline;
        chomp ldopts() and ccopts() for sanity

      - Recent versions od Strawberry perl (5.16.x) link their perl*.dll
        against the MingW libstdc++*.dll - hence pack it, too
        (same as libgcc_*.dll). Rewrite how we generate the C file(s)
        containing the custom perl interpreter, libperl DLL, libgcc DLL etc
        as large byte arrays and how we extract this stuff on bootstrap.

      - Bump requirement for Module::ScanDeps to a version that can grok
        Unicode::UCD from Perl 5.17 to avoid test failures

      - PAR 1.007 caused several tests to fail (t/20-pp.t, tests 8-9, 12).
        IMHO these are bogus (depend on unspecified behaviour) and previously
        succeeded only by accident; removed the offending sub tests

      - RT #75750: PAR::Filter::Bleach is broken
        - NOTE: original code works as intended due to the funny way
  	pack 'b' is implemented, but apply patch just for sanity

      - RT #78396: [manifypods] Error 255
        - s/MAN3PODS/MAN1PODS/ as suggested

      - Update to Module::Install 1.06

1.013  2012-02-22

  - New version of Tkpp (Version 1.2) (cf. RT #69517)

    - incorporate new script/tkpp from Djibril Ousmanou (DJIBEL), many thanks!
    - add "recommends" to Makefile.PL for Tk and additional Tk modules needed

  - Bug fixes, etc.

      - RT #74302: Win32 executable additional information (--info) not updated
        - finally apply patches from Mark Dootson (MDOOTSON) - thanks, Mark:
          rework resource handling for Win32 executables
        - BIG FAT WARNING:
          --info still doesn't work, so I disabled this option for now;
          at least on some platforms, "pp --info ..." results in a corrupted
  	executable that Windows refuses to execute

      - fix a problem with "pp --gui": the copy of par.exe extracted
        to the cache area (but with the same name as the packed executable)
        still used a console window though packed with "pp --gui ..."
        (bug reported in private communication)

      - RT #73491: cache directory naming problem
        Now the top level cache directory (typically $TEMPIR/par-$USER)
        will have $USER "encoded" as hex bytes. This avoids problems
        between the charset used for $USER and the charset allowed by
        the OS for filenames.

      - RT #75193 [PATCH] Fix build on Win32/VC++

      - bump dependency on PAR to 1.005
      - require latest version of Win32::Exe
      - run run_with_inc.pl using a nonce PAR_TMPDIR, too

1.012  2011-12-02

  - Bug fixes, etc.
    - run all tests using a nonce PAR_TMPDIR (otherwise CPAN Testers
      goes crazy as top level /tmp/par-USER directories (or similar)
      from previous tests may now be considered "unsafe")
    - bump dependency on PAR to 1.005 which has the same behaviour

1.011  2011-12-01

  - Bug fixes, etc.

    -  RT #69560/CVE-2011-4114: PAR packed files are extracted to unsafe
       and predictable temporary directories
       - create parent of cache directory (i.e. /tmp/par-USER) with mode 0700
       - if it already exists, make sure that (and bail out if not)
         - it's not a symlink
         - it's mode 0700
         - it's owned by USER

    - depend on PAR 1.004 (which contains the other half of the
      fix for CVE-2011-4114)

    - bump Perl version requirement to 5.8.1 (Schwern: The End Of 5.6 Is Nigh!)
    - explicitly mark Perl 5.10.0 as an unsupported version

1.010  2011-07-13

  - Bug fixes, etc.

    - Adapt for changes in XSloader.pm (>= 0.14)
      The old rule in PatchContent.pm no longer works with this version;
      this effectively disables how PAR::Packer intercepts loading of DLLs.
      Add a new rule for the code in recent XSloader.pm.
      NOTE: This problem affected all users of Perl >= 5.14.0 as this
      was the first stable release to include XSLoader 0.14.
      Also affected: Strawberry (at least) 5.12.3 which also comes
      with XSLoader 0.14.

    - RT #67311: missing dll
      - Windows: search more places for the dreaded libgcc*.dll
      - when linking boot.exe use $(CC) not $(LD)

    - RT #67681: can'r wrtie file
      During packing several temp files are created in the user's
      working directory - this will fail if the working directory is read-only.
      Fix up all calls to File::Temp::tempfile with TMPDIR => 1
      and drop the bogus check whether cwd is writable.

     -RT #68916: Solaris with Sun Workshop: heavy cosmetic issue
      Fix use of plain "char" array in files generated by myldr/file2c.pl.

    - RT #57273: Error building on Strawberry 5.12.0.1 64-bit (win32.coff file format not recognized)
      RT #69357: bug-PAR-Packer
      Hopefully fix the lonstanding "no 64-bit version of win32.coff" problem
      on 64-bit Windows using the MingW tool chain
      We simply don't link myldr/boot.exe with win32.coff in this environment.

      NOTE: test 32 of t/20-pp.t may fail. I have received conflicting reports
      about this, but just to want to make a release to get wider coverage.

1.009  2011-03-26

  - Bug fixes, etc.

    - RT #53463: PAR::Packer 1.002 on HPUX 11.23 PA-RISC issue
      (HPUX) patch from Lars-Gunnar Taube
      - add SHLIB_PATH to ld_path_keys in myldr/mktmpdir.c
      - call "chatr +s enable ..." on the extracted custom perl

    - RT #65535: Unable to run perl script packaged with pp under cygwin
      on another Windows XP installation

      - lib/PAR/Filter/PatchContent.pm: patch AutoLoader.pm to add "cygwin"
      to the list of "is_dosish" $^O identifiers; otherwise
      AutoLoader::find_filename() will mangle filenames that start with
      a drive letter
      - script/par.pl: use PAR::Filter::PatchContent to patch any modules
      embedded in the packed excutable; this supersedes the ad hoc
      patching of XSLoader.pm and will now also patch AutoLoader.pm
      - myldr/Makefile.PL: when generating $parl_exe or $parldy_exe make
      sure that we use the PAR::* modules (e.g PAR::Filter::PatchContent)
      from the build environment rather than a possibly
      installed older version

    - "Fix" #64485: pp PodStrip module included
      document how to inhibit pod stripping (copied from PAR.pm POD)

    - bump required Module::ScanDeps to 1.01 (hopefully fixes failures
      in t/90-rt59710.t with Perl 5.13.x)

    - reworked the build system a bit to fix recurring problems with dmake
      on Windows and parallel makes in general:

      - copy myldr/{parl,parldyn} to blib/scripts from myldr/Makefile
      - myldr/Makefile was completely handcrafted; try to generate it
      using standard ExtUtils::MakeMaker tools as much as possible
      - generate myldr/{Dynamic,Static}.pm from templates {Dynamic,Static}.in
      - rename static.c to boot.c

    - add "configure_requires" for ExtUtils::Embed

    - pick up some POD spelling fixes from Debian
      (thanks, Jonathan Yu <jawnsy@cpan.org>)

1.008  2010-11-21

  - Bug fixes, etc.

    - RT #61528: bug similar to RT 55994
      (Windows) relax heuristic to check whether the configured C compiler
      is actually gcc (Ed Zagar)
    - RT #61874: Windows: Packed executable handles wildcards different from script
      myldr/static.c: turn off automatic globbing of process arguments when
      building with MingW (Roderich)
    - RT #62357: .cgi extension not taken as script
      call into Module::ScanDeps with $Module::ScanDeps::ScanFileRE
      set to qr/./ so that we don't discriminate against scripts that have
      an extension other than .pl, .pm, .al or .t (or no extension at all)
      (Roderich)
    - RT #63083: pp: Undefined subroutine &DynaLoader::bootstrap called in pp-compiled bianry
      fix the name where the shared perl DSO ($libperl in myldr/Makefile.PL)
      is extracted to so that it matches the reference the linker wrote into
      $par_exe; heuristic currently only available for Linux (assuming
      we have GNU binutils installed), but might work on other ELF-based
      systems, too (Roderich)
    - t/30-current_exec.t: fix a test failure on Cygwin
      (cygwin.dll was not on PATH) (Roderich)

1.007  2010-09-09
  - Bug fixes, etc.

    - RT #56582: PAR-packer compilation on Windows XP32 box
      applied patch from Jean-Michel Male to fix building with
      Microsoft Visual Studio (Roderich)
    - RT #50747: (no subject)
      finally use permissions 0775 in my_mkfile() (Roderich)
    - require modern Module::Install (chorny)
      and update Module::Install et al. to version 1.00 (Roderich)
    - RT #59710: Par-Packer not including all dependencies
      When cleaning @INC at the end of bootstrapping (just before
      we run the actual packed script) canonicalize $ENV{PAR_TEMP}
      before we use it to match elements of @INC.
      This works around non-canonicalized values (e.g. a trailing slash)
      for $ENV{TMPDIR} or P_tmpdir (as #define'd in <stdio.h>)
      (the latter seen on FreeBSD and OSX) (Roderich)
    - RT #56020: PAR::Packer and PDF::API2 Unicode::UCD: failed to find UnicodeData.txt
      that's actually a bug in Module::ScanDeps);
      bump requirement on Module::ScanDeps to a versionthat has the fix
      (correct %Preload rule for Unicode::UCD)

1.006  2010-06-26

  - Bug fixes, etc.
    - RT #58266: fix "install PAR::Packer failed for strawberry perl 5.12.0.1
      (parldyn.exe not found)"
      Apparently exec() on Windows spawns the new process, but then exits
      immediately without wait()ing for the new process (observed at least
      on ActiveState Perl 5.10.1 and Straberry Perl 5.12.0.1). That causes
      myldr/run_with_inc.pl to return control to myldr/Makefile prematurely,
      causing (depending on timing) the build to fail. Work around this by
      using system() instead.
    - While we're at it, clean up some dubious dependencies in
      myldr/Makefile.PL.
    - Drop test_requires IPC::Run3 introduced in 1.005, simply skip all tests
      in t/30-current_exec.t when run in a path that contains spaces.

1.005  2010-06-05

  - Bug fixes, etc.
    - RT #57494: add attributes.pm to list of always required modules
      (Roderich)
    - RT #55994: fix "Can't call method "remove" on an undefined value
      at .../Win32/Exe.pm" (patch from DJIBEL)
    - RT #57948: pp-generated executable and a missing dependency
      on libgcc_s_sjlj-1.dll (Roderich)
    - RT #58095: test fails on OS X (when building in a directory
      with blanks in its pathname); NOTE: adds a test_requires
      on IPC::Run3 (Roderich)
    - spring cleaning in myldr directory (Roderich)

1.004  2010-04-20

  - Bug fixes, etc.
    - RT #52794, #56654: script/par.pl: remove munging of @inc on Windows;
      it causes problems with Strawberry Perl

1.003  2010-04-10

  - Bug fixes, etc.
    - RT #56171: add PerlIO and PerlIO::scalar to the list of always
      required modules (Roderich)
    - Fix t/30-current_exec.t failing when cwd contains regexp
      metacharacters (Niko Tyni)
    - Link to repository in meta information (chorny)

1.002  2009-12-17

  - Bug fixes, etc.
    - RT #52407: fix calls of sprintf in myldr/mktmpdir.c that rely on
      unspecified behaviour (output buffer is also among the input
      parameters). (Roderich)

1.001  2009-11-24

  - Bug fixes, etc.
    - Fix to the rejection of "main.pl" as input scripts. Previously,
      we rejected /main\.pl$/, now we only reject files named "main.pl"
      as we should (Markus Jansen)

1.000  2009-11-22

  - No functional changes since the latest development release.

  - But let's (finally) encourage the notion that this is
    production grade software by using a version >= 1!

0.992_06  2009-11-20

  - Bug fixes, etc.

0.992_05  2009-11-13

  - Bug fixes, etc.
    - Apply patches from RT #49900: [PATCH] build problems
      (Marcela Maslanova)
    - When computing the SHA1 in par_mktmpdir (myldr/mktmpdir.c)
      rewind file descriptor f first. Otherwise we checksum just
      the last 12 bytes of file progname. (Roderich)
    - RT #18472: "parl foo.par script.pl ..." uses a cache area that
      doesn't depend on foo.par
      Indeed, the (name of) the cache area used for "parl foo.par ..."
      is derived from the SHA1 checksum of parl.exe, and _not_ foo.par.
      This patch changes that for the common use case above. It is not
      a complete fix though, as this would require to parse the parl
      command line arguments on the C level. (Roderich)

0.992_04  2009-09-11

  - New features
    - Reject "main.pl" as input scripts since this can override the
      bootstrapping code. For wizards who really want this, there
      should be still "-a main.pl;script/main.pl".

  - Bug fixes, etc.
    - Fix RT #48614: ignore setting of PERL5OPT (and others) in a
      packed executable (Roderich)
    - Fix RT #48027: Fix building with ActivePerl & MinGW

0.992_03  2009-07-24

  - Bug fixes, etc.
    - Fix "Can't locate IO/file.pm in @INC ..." bug (Markus Jansen)

0.992_02  2009-07-23

  - New features
    - Add the cachedeps option to pp:
      PAR::Packer can now use the new Module::ScanDeps
      feature of caching the module dependencies for a significant
      packaging speed-up.

0.992_01  2009-07-19

  - New features
    - Reusable pp packaged applications (see pp's --reusable option)

  - Bug fixes, etc.
    - Accept other extensions than .par in -p mode.

0.991  2009-03-21

  - New features
    - Add Roderich's reeally useful debugging tool "extract_embedded.pl" to
      the contrib/ subdirectory. It can be used to extract the contents of a
      "parl" binary.

  - Bug fixes, etc.
    - Add Errno and Tie::Hash::NamedCapture (if available) to required_modules
    - Fix the stripping of =encoding POD lines in PAR::Filter::PodStrip
    - Throw a proper error if a module specified via -M cannot be found
      (Roderich Schupp, Gabor Szabo)
    - Don't update exe's with icons twice on Win32.
    - Band-aid fix for RT #41790 in par.pl
    - Some very slightly more careful handling of environment variables in par.pl
    - Fix SEGV crash during startup if $PATH is not defined (Johannes Lode)

  - Documentation
    - RT #12104.  Improved documentation in pp on -T/--tempcache.

0.982  2008-07-29

  - Bug fixes, etc.
      - Fix bleadperl compilation.
      - Ensure extracted files are marked executable on HP-UX so they can be
        used by the dynamic linker. (Scott Stanton)
      - Fixed incorrect error handling code in test for directory existence when
        creating a private temporary directory. (Scott Stanton)
      - On Windows, attempt to use the system temp directory before trying the
        temp_dirs locations. (Scott Stanton)
      - Don't remove the top level par-<user> directory for PAR_CLEAN=1 because
        doing so introduces a race condition with other applications trying to
        create the directory on startup. (Scott Stanton)
      - When creating the temporary directory for PAR_CLEAN=1, ensure that
        the directory does not already exist to avoid picking up stale files
        from a prior invocation of a different par application.  This eliminates
        the need to rename the temp directory before removing it, which was
        causing race conditions in multi-threaded apps.  (Scott Stanton)
      - Now officially requires Perl 5.6.1 and up in the Makefile.PL.
        This has been the case for a long time anyway, but this change
        should suppress some spurious CPAN testers failures.

  - Documentation
      - Clarified examples in the pp documentation, thanks to Dave Howorth.

0.981  2008-05-14

  - Bug fixes, etc.
      - Make get_username_from_getpwuid work for uid=0. (Scott Stanton)
      - Fixed crash in get_username_from_getpwuid when getpwuid fails.
        (Scott Stanton)
      - Fix broken build on win32 when searching for dll and finding static perl
        library. (Alexey Borzenkov)
      - Fix compilation on MacOS 10.5's gcc because that doesn't seem to support
        the --output option. (Matthew Andersen)

o0.980  2008-05-14
  - Emergency bug fix release
      - The test suite in the previous release was broken by my debugging
        code. Sorry about that. (Steffen)

0.979  2008-05-13

  - Bug fixes, etc.

      - Add a preprocessor conditional to myldr/internals.c to
        make PAR::Packer compile with blead
        (Avar Bjarmason, Nicholas Clark)
      - Also strip =encoding POD directive during
        PAR::Filter::PodStrip.
      - Temporarily disable the shared-libraries cleanup code in par.pl
        that was introduced in 0.977 by Scott. This may result in
        stale cache directories even if PAR_CLEAN is in effect. On the
        other hand, this means threaded applications work again.

0.978  2008-02-28

  - Bug fixes, etc.

      - Fix pp -r for absolute file names (RT #33355) (Slaven Rezic)
      - Fix for FreeBSD's unreliable procfs (RT #33349) (Slaven Rezic)
      - Fix @INC ordering in par.pl: This might just fix the infamous
        "Only available with the XS version..." bug (see #24192)
        (Michael Schwern, Slaven Rezic)
      - Fix pp.pm version (Audrey)
      - Require Win32::Process on win32 (Audrey)
      - The parl-generation tests are now skipped if a pre-built .par
        binary is being used. (Mark Dootson)
      - Shared library extraction now checks first whether the file exists
        and whether it has the same size as the one to be extracted. In that
        case, the extraction is skipped. This should fix an issue with
        overwriting DLLs on Windows, see
        http://www.nntp.perl.org/group/perl.par/3325 (Scott Stanton)
      - When re-building the distribution because of a change in
        e.g. script/par.pl, the DATA sections of
        blib\PAR\StrippedPARL\{Dynamic,Static}.pm were not updated accordingly.

0.977  2007-12-20

  - New features
      - Support for Perl 5.10 and later.
      - New -E flag for "pp" that works just like "perl -E" for Perl 5.10+,
        namely enabling new syntactic features like "say".

  - Bug fixes, etc.
      - When deleting the temp directory in the background, rename the
        directory to a unique name to avoid potential collisions caused
        by pid reuse (primarily an issue on Windows).
      - PAR::Packer now depends on Module::ScanDeps 0.78 because 0.77
        had a critical bug. If you are having trouble with M::SD 0.78,
        please a) report it in the bug tracker and b) try versions of
        M::SD below 0.77.
      - If running with the "clean" option, go through extra pain in par.pl
        to clean up if the OS doesn't allow opened shared libraries to be
        deleted. (Scott Stanton)
      - Use the P_tmpdir macro as temporary directory on Unix if available.
        See RT #29784.
      - Included PWD fix. See RT #29050.
      - Added deletion of 'orig_parl' on Win32 in PAR::Packer.

0.976  2007-07-29

  - New features
      - If available, the packager will include the new and slightly
        experimental Archive::Unzip::Burst module in generated binary
        executables. This can speed up the initial extraction of such
        a binary by a significant factor.
        (Total running time went from 8 seconds to 1.4 seconds in a
        simplistic test.)
      - The preprocessor option/define PERL_PROFILING can be used while
        compiling myldr/ (parl) to enable Devel::DProf profiling of
        the archive extraction.

  - Bug fixes, etc.
      - myldr/Makefile workaround for HPUX. (RT #24950)
      - Makefile.PL doesn't require 5.006 any more but uses 'strict' now.
      - Makefile.PL doesn't use Module::AutoInstall any more. It's evil.
      - Dependency on PAR.pm upgraded to 0.976.
      - Marked PAR::Filter::Bytecode as deprecated. Added references to
        PAR::Filter::Crypto.

0.975  2007-05-06

  - Bug fixes, etc.
      - Trailing backslashes in @INC paths handled in
        PAR::StrippedParl::Base
      - Win32 added to 'required modules' to handle changes in Win32 core
        present in ActiveState build 820 and development branches.
      - No longer assume -B when using pp -P (or -p). (Roderich Schupp)

0.973  2007-02-03

  - New features
      - If PERL5LIB is set, that variable may be ignored in some parts
        of the myldr/ build process. We now warn the user during Makefile.PL
        if PERL5LIB is set. (Gaal Yahas)

  - Bug fixes, etc.
      - Cosmetics: Add "use strict;" and "use warnings;" to some files that
        lacked it.
      - Several bug fixes for the tests from Malcolm Nooning. Related to
        making them work on Windows with spaces in paths.
      - Added regexp escaping to the "pp -X foo.par" use case.
        (Eric Wilhelm)

0.970  2006-12-03

  - This is the first release of PAR-Packer as a separate distribution.
  - PAR and PAR-Packer (+pp, parl, etc.) have been separated because there
    is usually no reason for the PAR Packager to be present on a user system
    which just needs PAR.pm to access .par archives.
  - PAR-Packer will include all development tools such as those included
    in the contrib/ subdirectory.

  - Bug fixes, etc.
      - Moved most code from script/pp to lib/pp.pm so it gets picked up by the
        CPAN indexer. Hence you will be able to write "install pp" in the CPAN
        shell to install pp/PAR::Packer.
      - PAR::StrippedPARL::Base->write_parl() failed to work if the @INC
        directories contained spaces in 0.960. (Steven Mackenzie)
      - Much improved documentation of the environment variables
        (Glenn Linderman)
      - Fix for a spaces-in-pathname problem on Windows for
        t/30-current_exec.t. (Malcolm Nooning)

0.960  2006-11-21

  - Bug fixes, etc.
      - myldr/Makefile.PL fix: Clean up myldr/usernamefrompwuid.h.
      - Silence warning in myldr/internals.c.
      - Silence warnings seen on Irix from myldr/env.c.
      - Skip most tests in 10-parl-generation.t if there is no parl.
      - Skip loading ActiveState Perl's "sitecustomize.pl" in par.pl.
      - Load modules via require and other files via do.
      - The parl-regeneration-for-every-pp-call addition of the 0.958 release
        should now also work for static perls.

  - New features
      - Adressing RT ticket #6612: Now using getpwuid() to determine the
        user name if supported by the OS.

0.959  2006-11-12

  - This is just a hotfix release because 0.958 lacked META.yml. One day, I will
    switch from Module::Install to Module::Build...

0.958  2006-10-25

  - Bug fixes, etc.
      - myldr/Makefile.PL fix: make static.o depend on mktmpdir.c, my_perl.c,
        my_par.c. (Roderich Schupp)
      - Modules included with the -M option to pp were previously scanned
        for dependencies but not mapped through the
        %Module::ScanDeps::Preload hash for custom dependencies. That's
        fixed now.
      - $ENV{PAR_RUN} isn't set by PAR::Packer any more because nothing in
        the PAR sources uses it. $ENV{PAR_RUN} is no longer used by PAR
        at all.
      - Unified the environment variables which are looked at for
        finding the system's temporary directory.

  - New features
      - During the build process, PAR appends stripped down copies of parl
        (and parldyn if applicable) to the data classes
        PAR::StrippedPARL::Static and ::Dynamic. These
        parls-without-embedded-modules are used for packaging so the formerly
        embedded modules are now packaged from the packaging system. (Instead
        of stemming from the system where PAR/parl was built.)
      - The "use PAR { repository => $url };" syntax now also supports
        the use of user-constructed PAR::Repository::Client objects instead
        of an URL.
      - The -F (module code filter) option now supports selective filtering
        of modules. The syntax is "-F FILTER=REGEX" or - as before -
        "-F FILTER". The regular expression is applied to the *file name*,
        of the module inside the PAR (e.g. Foo/Bar.pm). This behaviour was
        chosen over matching against the module name (e.g. Foo::Bar) because
        the filters can be applied to module-like and script files as well
        (.pl, .al, etc.).
      - Updated PAR/FAQ.pod with the new FAQ's from the PAR wiki.
      - Added a POD file PAR/Environment.pod which is intended to become
        an index of all environment variables PAR uses of its own or
        recognizes from its users. Still mostly a stub.

0.957  2006-10-24

  - Bug fixes, etc.
      - Fix executable PARs top properly detect embedded scripts
        named the same as the executable. (Jesse Vincent)
      - Comment out the call to par_current_exec_proc (in the C loader)
        which breaks the use of symlinks to pp-ed executables when not
        called with a path. (I.e. using a search in $PATH).

0.956  2006-10-03

  - This is another hotfix release. Fixed a mindless bug introduced in 0.955.

0.955  2006-10-03

  - Bug fixes, etc.
      - 0.952 introduced removal of system module search paths if -B is in
        effect. This resulted in some valid PAR-related paths being removed
        as well. Fixed. Upgrading from 0.952 and 0.954 is suggested.
      - Changed the use of hard-coded '/' as path-separator to using File::Spec.

0.954  2006-09-26

  - This release is equivalent to 0.953. The 0.953 CPAN upload is
    broken!

0.953  2006-09-18

  - Bug fixes, etc.
      - Added optional POD tests.
      - Modified -B so that if -B is in effect, all entries are stripped
        out of @INC except for the PAR hooks. This happens right before
        the script contained in the pp-ed binary is executed.

0.952  2006-08-22

  - New features
      - Added the "install" option to the PAR loading syntax.
        If specified, the contents of the PAR distribution are
        permanently installed.
        This requires PAR::Repository::Client 0.04.

  - Bug fixes, etc.
      - Fixed broken META.yml in 0.951.

0.951  2006-08-12

  (This includes any changes up to 0.950.)

  - New features

      - Introduced new PAR loading syntax and semantics:
        use PAR { file => 'path/to/par/or/URL' };
        ==> equivalent to "use PAR 'path/to/par/or/URL';"
      - Introduced the 'fallback' option: (default = 0)
        use PAR { file => 'foo.par', fallback => 1 };
        ==> Loads modules from the PAR file only if loading
            them from @INC did not succeed.
      - Introduced the 'run' option which executes a script
        in a PAR archive just like
        perl -MPAR foo.par script.pl
      - If PAR::Repository::Client is installed, you can add a
        repository of .par distributions to your library search path
        as follows:
        use PAR { repository => 'http://foo' };
      - Of course, 'run' also works with repositories:
        use PAR { repository => 'http://foo', run => 'my_app' };
        (This searches the repository for any distributions that have a
        my_app script.)
      --> For details on repositories, have a look at the
          PAR::Repository::Client module.

  - Bug fixes, etc.

      - Commented a couple of the routines in PAR.pm. (Yay!)
      - New test script for the new fallback loading feature.
      - Fixed a bug in the Spreadsheet::ParseExcel handling in
        PatchContent.pm.

0.942  2006-07-22

  - Bug fixes, etc.

      - Better support for diagnostics.pm (in conjunction with
        Module::ScanDeps 0.62.)
      - Now requiring Module::ScanDeps 0.62.

0.941  2006-06-20

  (No, PAR isn't stagnating. It's just that 1.00 would draw close if
  we continued with 0.01 increases.)

  - Bug fixes, etc.

      - Version 0.94 of PAR would use the same cache area for all pp-ed
        applications due to a faulty hotfix for Digest::SHA. This applies
        to PAR 0.94 only. Think of 0.941 being PAR 0.94 done right.

0.94  2006-06-01

  - New Features

      - Added support for reading options to pp from a file using a
        '@filename' argument to pp:  pp -o foo --gui @filename foo.pl

  - Bug fixes, etc.

      - Workaround for a bug in Digest::SHA 5.38 and 5.39 that would prevent
        PAR from being built.
      - Fixed details in the 2-pp.t test file.
      - Now recognizes text files that aren't picked up by the -T operator
        but by the "file" tool.
      - Applied Roderich Schupp's patch to 30-current_exec.t to fix a
        path issue.
      - Now requiring Module::ScanDeps 0.60 which fixes a couple of bugs
        which might be observed as PAR bugs.
      - Now working well with Spreadsheet::ParseExcel which uses an invalid
        POD section to comment out a code block. This wasn't recognized by
        PAR::Filter::PodStrip as POD and hence partly left in...
      - If the output directory doesn't exist, we create it now and output
        a meaningful error message if that failed.

0.93  2006-05-19

  - New Features

      - Added support for PAR_TMPDIR (PAR_GLOBAL_TMPDIR) so that the
        temp directory can be controlled for just the PAR file bits.
        (Leolo)
      - Added par_current_exec_proc() which finds the file of the current
        executable in /proc, if possible. (Leolo)
      - Added par_current_exec() which finds he file of the current
        executable, if possible on this OS. (Leolo)
      - par_findprog() now uses par_current_exec() if possible.

  - Bug Fixes, etc.

      - Upgraded to Module::Install 0.62+ (Audrey Tang, Steffen Mueller)
      - Document a strange interaction with chdir() and relative
        paths. (Chris Dolan)
      - Documented the bits that make up PAR_TEMP. (Leolo)
      - Fixed the call to par_findprog. path (aka val) was set to
        tmpdir. (Leolo)
      - Documented the CACHE name at the end of a self-executing
        PAR. (Leolo)
      - myldr/Makefile.PL now generates some dependencies for
        main.c (Leolo)
      - Applied patch from RT ticket. (tsee)
        https://rt.cpan.org/Ticket/Display.html?id=13959
      - Applied Ivan Kudryavtsev's patch that fixes a couple of calls
        to PAR subroutines in PatchContent filtered code. (tsee)

0.92  2006-02-22

  - Bug Fixes

      - Now requiring Module::ScanDeps 0.56 which handles autouse
        correctly.
      - Now shipping with a correct SIGNATURE. (Which was broken for
        0.91.)

0.91  2006-02-13

  - Bug Fixes

      - Applied Alan Stewart's patch which fixes @ARGV pollution in
        daughter programs. See also
        http://www.nntp.perl.org/group/perl.par/2152
      - Now mentioning the ENV var "PAR_VERBATIM" in the documentation.
        See also http://www.nntp.perl.org/group/perl.par/2196
      - Applied Malcolm Nooning's fix for the test suite. We used to get
        failed tests on Windows because of spaces in path names.
      - Applied Roderich Schupp's and Malcolm Nooning's patches to
        the test suite fixing problems with Cygwin.
      - Applied Vincent Ladeuil's patch to PAR::Filter::Bleach to return a
        true value for modules that loaded okay.
      - Changed 'PAR_BASE' in the Makefile.PL to 'SMUELLER'.

0.90  2005-11-25

  - Bug Fixes

      - When compiling with static libperl, myldr/ may fail "make"
        due to sha1.c not generated properly.

      - Pod stripping could fail on __DATA__ sections for files
        with CRLF line endings.

      - The documentation erroneously referred to the PAR_TEMP
        environment variable, whereas it should be PAR_GLOBAL_TEMP.

      - Compilation fixes for MinGW/MSYS.

0.89  2005-06-10

  - Bug Fixes

      - Stop static.c from pulling in Perl header files, otherwise
        parl.exe ends up depending on the Perl DLL on Win32 when
        Perl is built without PERL_IMPLICIT_SYS.

      - With *nix and File::Path 1.06, par.pl's avoidance of loading
        Cwd.pm caused syntax errors.

0.88  2005-06-07

  - Bug Fixes

      - Extracted .pl files should be loadable via the coderef-in-@INC too,
        just like .pm files and autosplit files.  This makes PAR work with
        Perl 5.8.7 on Win32.

      - Fix the build with GCC 4.0.

      - If $ENV{PWD} is not defined, fallback to use `pwd` to obtain the
        working directory for invoking.

0.87  2005-01-31

  - Bug Fixes

      - On Win32, some versions of File::Spec::Win32 contains explicit
        "use Cwd;" lines, which renders parl.exe unusable.

      - Executable made by "pp" may fail when invoked as "./a.out" or
        "../a.out", due to incorrect PWD handling logic.

0.86  2004-12-11

  - New Features

      - New "pp -z" (--compress) option to set compression level (0-9).

      - New "pp -T" (--tempcache) option to override the per-executable
        directory name; it defaults to a hash of the executable, computed at
        compile time.  This makes startup much faster for large executables.

      - The hash algorithm described above now prefers Digest::SHA if installed,
        otherwise Digest::SHA1, then fallbacks to Digest::MD5.

      - Functionality of "pp -X" is now extended: if the argument after -X is a
        zip or par file, files in it are excluded from the produced executable,
        and the executable will "use" the zip/par instead. For multiple -X args,
        successive args are only "use"d if they contain additional unique files.

      - "pp -l" now searches for libraries in "." and PATH in Win32.

      - "pp -l" shared libraries are now added to %skip, so it will not
        be included in both shlib/ and lib/.

      - "pp -l" now chases symbolic links.  For example, if "libsomelib.so"
        is a symlink to "libsomelib.so.1", which is another symlink to
        "libsomelib.so.1.2", pp now follows these symlinks and add the real
        file the par, rather than "libsomelib.so".

      - New contributed code in "contrib/stdio/": Useful Tk console for
        "pp -g" users.

      - New contributed tutorial documents, currently in "contrib/docs/",
        which will eventually be turned into POD documents.

      - Running "perl Makefile.PL" with $ENV{DEBUG} set to true now produces
        "parl" with debug symbols.

      - Remove Cwd.pm (and Cwd.so) from the bundled dependencies.

  - Bug Fixes

      - More robust probing for case-insensitive file systems.

      - PodStrip now attempts to match "standard" pod start before =cut,
        otherwise =cut gets removed by itself.

      - Win32 slashes are now normalized in privlib and archlib directories.

      - Don't extract shared libraries to inc/, since they were extracted
        in $PAR_TEMP already.

      - Don't re-extract shared libraries in subdirectories, since they
        are picked up by corresponding "use".

      - Tk now exits properly with a non-zero exit() value.

      - Fix libperl probing problem on Debian and Gentoo that manifests as a
       "libperl5.8.so not found" error during runtime.

      - gpp: Fixed typo in options with multiple filenames; cleaned up
        pp parameters.

      - When PAR_TEMP is set, shlib/ was not correctly added to the dynamic
        load path environment variables.

      - PAR now builds with Win32 VC++ without CVTRES.EXE available.

      - Detection of cl.exe, gcc.exe and cc.exe is now case-insensitive.

0.85  2004-07-02

  - New Features

      - New version of "gpp"; see contrib/gui_pp/gpp_readme.txt for details.

  - Bug Fixes

      - MANIFEST and META.yml were not properly updated by PAR::Packer.

      - Setting directory aliases with "pp -a"/"pp -A" was broken.
        Fixed, and tests were added for it.

      - Statically-built executables was needlessly extracting libperl
        each time it runs; now it is eliminated and hence much faster.

0.83  2004-05-29

  - New Features

      - Revamped PAR::FAQ and sychronized with par.perl.org.

      - In pp-generated programs, $0 is now set to the pathname leading
        to the invoked executable.  Use $ENV{PAR_0} instead to get the
        filename that contains the main perl program.

      - Updated "contrib/gui_pp/gpp" to support PAR::Packer options.

  - Bug Fixes

      - Core XS modules, such as Data::Dumper, were skipped by "pp".

      - Fix t/2-pp.t for Cygwin by probing $Config{_exe} rather than uname().

      - Scripts made by "pp -P", when invoked as "perl scriptname",
        should not search for the same-named programs in PATH.

      - Correctly remove leading slash and drive letters from absolute
        filenames passed to "pp -a".  Also normalized blackslahes to slashes.

      - The PP_OPTS environment variable was not recognized.

      - "pp -a dirname;diralias" was broken.

      - "pp -f" and "pp -F" were broken.

0.82  2004-05-24

  - New Features

      - New module PAR::Packer provides an OO interface to "pp"'s
        functionality; "pp" is now merely a thin wrapper for it.

      - New module App::Packer::PAR is a modified version of
        App::Packer, designed to work with PAR::Packer, and will
        hopefully be merged back to App::Packer.

      - The old, procedural "pp" is moved to contrib/; end-users
        should notice no changes in "pp"'s behaviour.

      - New options "pp -a" and "pp -A" (--addfile/--addlist) provides
        ways to include extra files and directories in the package.

      - The long option name for "pp -M" is changed from --add to
        --module.  The old name is still recognized but no longer
        documented.  Using "pp -M" to include non-library files
        is now deprecated; use "pp -a" instead.

      - par.pl and parl now writes messages to STDOUT, instead of
        STDERR.  As a consequence, t/2-pp.t no longer prints extra
        warnings during "make test".

  - Bug Fixes

      - On Non-Win32 platforms, perl 5.8.0 and earlier versions produced
        pp-generated executables that immediately segfaults.

      - Running pp-generated executables with absolute pathname failed
        on statically-built perls.

      - Tests were failing due to a missing pipe_a_command.pm in MANIFEST.

      - Add the missing myldr/win32.coff for building on Cygwin/MinGW.

      - If the "perl" in path is different from the perl interpreter used
        for "make test", t/2-pp.t is known to fail and is now skipped.

      - Cygwin failed t/2-pp.t because "parl" is spelled as "parl.exe" there.

0.81  2004-05-23

  - New Features

      - Regained support for Win9x, Cygwin and MinGW.

      - PAR now supports 64-bit platforms, such as Tru64 and AIX.

      - Cygwin and MinGW can now build EXEs with icons, too; MinGW can update
        the icons, but Cygwin cannot.

      - Newly supported modules: Pod::Usage, DBIx::SearchBuilder,
        DBIx::ReportBuilder, SVK::Command, SVN::Core, and the ':encoding()'
        IO discipline.

  - Bug Fixes

      - On non-Win32 systems, invoking pp-generated executable from PATH
        did not work.

      - Standalone executables were clobbered by existing perl environments
        with an identical "auto/IO" libpath as the author's environment.

      - Standalone executables did not work on systems with an unset
        dynamic load path environment variable (eg. LD_LIBRARY_PATH).

      - "pp -p -o multi.par 1.pl 2.pl; parl multi.par 1.pl" now works.

      - $ENV{PATH} and $ENV{TEMP} were truncated at first path delimiter.

      - "pp -f Bleach" did not work for ActivePerl on Win32.

      - Windows 9x systems were generating invalid cache directory names.

      - $ENV{path} is also recognized as $ENV{PATH} for Win32.

0.80  2004-03-17

  - New Features

      - A comprehensive test suite for pp in contrib/automated_pp_test/.
        It is run as part of the "make test" process from t/2-pp.t.

      - Much better support for "pp -i" and "pp -N" (--icon/--info)
        using the Win32::Exe module.  You may now use EXE and DLL as
        icon files.

      - If PAR_GLOBAL_CLEAN (-C, --clean) is not set, we now preemptively
        extracts files under the cache directory.  That made POSIX.pm
        and other modules that depends on %INC pointing to real files
        work correctly.

      - Now uses SHA-1 to create temporary directories and files,
        instead of mtime.

      - Verbosity level is now 1..3, not 0..5; "pp -v" now takes
        an optional integer, so "pp -v input.pl" is no longer an error.

      - New flags "-vv" and "-vvv", as shorthands for "-v 2" and "-v 3".

      - The user-settable PAR_CLEAN and PAR_TEMP environment variables has
        been renamed to PAR_GLOBAL_CLEAN and PAR_GLOBAL_TEMP; the original
        variables are still accessible within the program.  This is so that a
        pp-generated program can exec() or system() another one without
        crippling its environment variables.

      - File lookups are now case-insensitive on case-insensitive filesystems.

      - Another Tk-based GUI in contrib/gui_pp/; not installed by default.

      - OOified "pp" in contrib/object_oriented_pp/; not installed by default.

  - Bug Fixes

      - "pp -d" (--dependent) prevented "pp -C" (--clean) from working.

      - The "pp -m" (--multiarch) option was implemented incorrectly
        and thus broken.

      - Many documentation tweaks.

      - Previously, "pp -M" (--module) did not add the module itself,
        only its dependencies.

      - Suppress a bogus warning when $ENV{$Config{ldlibpthname}} is empty.

      - "parl -v" without Module::Signature installed could delete all
        files within the current directory.  Oops.

      - On *nix systems, pp-generated executables erroneously linked to
        libperl even if "pp -d" (--dependent) is not set.

      - Spurious =cut directives in source files is now handled gracefully
        by PAR::Filter::PodStrip.

      - "pp -L" (--log) now logs all output messages to the log file,
        not just the ones printed by "pp" itself.


0.79  2004-01-08

  - Bug Fixes

      - Setting PAR_CLEAN had the reversed effect.  Oops.

      - Dynamic libraries in cached directories was not detected
        properly, resulting in "permission denied" errors during
        certain race conditions.

0.78  2004-01-07

  - New Features

      - By default, executables generated by "pp" will now store
        extracted files in cache directories.  You may override
        this by setting the PAR_CLEAN environment variable to "1",
        or generate executables using "pp -C".

      - New "pp -C" (--clean) option to make the generated executable
        clean up temporary directories after each run.

      - PAR_CLEARTEMP is renamed to PAR_CLEAN.

  - Bug Fixes

      - On Win32, temporary directories containing shared libraries
        was not being properly cleaned up.

      - If no suitable temporary directories are found, use the current
        directory (".") instead of the root directory ("/").

0.77  2004-01-01

  - New Features

      - New "pp -c" and "pp -x" (--compile/--execute) options run the
        script with "perl -c" to check for dependencies.

      - Also, the new "pp -n" (--noscan) command skips the default
        static scanning altogether.

      - Added support for "pp -c/-x/-n" to tkpp.

      - For dynamically-built perls, pp-generated .exe files will now
        appear in the process table with the same name as it was launched,
        instead of "par.exe".

      - New filter "Obfuscate", which uses B::Deobfuscate to strip away
        PODs and comments, as well as mangling variable names.

      - Merged tkpp 1.1 from Doug Gruber.

      - OS/2 is now supported.

      - External Zlib is no longer required to run pp-generated binaries.

  - Bug Fixes

      - Makefile.PL was failing if $Config{cc} contains spaces.

      - No longer needs setting "Windows 95 compatible mode" to run on WinXP.

      - On Win9x with Perl 5.6.1, "nmake" was failing due to extra "@[...]"
        symbols in Makefile.  It should be fixed now.

      - The "bad signature" problem with newer Archive::Zip versions is fixed.

      - App::Packer::Backend::PAR was misplaced into App/Packer/PAR.

      - Signature tests were failing under new ExtUtils::MakeMaker versions.

      - ActiveState's PPM building machine was having problem with PAR;
        a ".pdb" entry in MANIFEST.SKIP is added to fix that.

      - Some self-built PAR instances on Windows were failing due to
        mismatching short and long pathnames.

0.76  2003-10-28

  - New Features

      - Input filters. "pp --filter Bleach" now obfuscates the incoming
        script with PAR::Filter::Bleach; "pp --modfilter Bleach" applies
        Bleach to all packed modules.

      - Two previously built-in filters, PodStrip and PatchContent,
        are refactored out as PAR::Filter subclasses.

      - Two new filters, Bleach and Bytecode, are added for source-hiding
        purporses.

      - New utility, "tkpp", provides a GUI frontend to "pp".

      - New option, "pp --perlscript", to generate stand-alone scripts.

      - The old "PAR::Intro" documentation has been replaced by two
        new ones: "PAR::Tutorial" and "PAR::FAQ".

      - Tk pixmap (.xpm) files can now be packed with "pp --add".

  - Bug Fixes

      - Perl 5.8.1 has an off-by-one bug that prevents "parl" to
        function properly.  We have now provided a workaround;
        this bug should also be fixed in Perl 5.8.2.

      - Fixed https support for LWP via the new Module::ScapDeps.

0.75  2003-09-21

  - New Features

      - "pp -o file.exe file.par" now packs file.par into file.exe;
        this means you can hand-tweak PAR files generated by "pp -p"
        before packing it into an executable.

  - Bug Fixes

      - Packing multiple programs by "pp script1.pl script2.pl" was
        producing syntax errors; fixed.

      - "pp -M datafile" now works.

      - Exit code from pp-packed executables now properly propagates out.

      - Fixed "use base" detection, Math::BigInt support and spurious
        signature warnings, by updated versions of Module::ScapDeps
        and Module::Signature.

      - On Win32, the PE info headers no longer show PAR_XXXXXXXXXXX.

0.74  2003-08-20

  - New Features

      - pp now has a set of "PatchContent" rules, dealing with
        non-PAR-compatible modules: Tk, Tk::Widget, Win32::API::Type,
        Win32::SystemInfo, SQL::Parser, diagnostics.  These rules may
        get refactored back to PAR.pm in the future.

      - New function, PAR::reload_libs(), to reload currently used
        libraries inside PAR files.

      - PAR.pm itself is now never packed into pp-generated files,
        to perserve interface compatibility and reduce bloat.

      - PAR.pm now handles "use PAR 'othercode.par'" called from
        program or modules inside PAR files, even recursively.

      - A new icon for Win32 that is hopefully prettier.

  - Bug Fixes

      - All data after __DATA__ are preserved for included libraries.
        This helps self-reading modules like Net::LDAP::Constants.

      - PAR::read_file() was broken.  It now works.

      - "use PAR" inside pp-generated executables was failing with
        'file too short' errors due the mishandling of seek/tell.

      - Occasional crashes on Win32 due to rmdir() called too early
        with DLLs still open is fixed; however, "pp -d" executables
        may still exhibit this problem.

      - "pp -X" used to only take full pathnames as arguments.
        It now also takes "Module::Name" and "Module/Name.pm".

      - Dynamically built Perl under Cygwin failed to build, because
        libperl.dll.a was not found.

      - Eliminated "callback called on exit" warnings, and the related
        "access violation" error on Win32.

0.73  2003-08-06

  - New Features

      - The PAR Homepage is now online at http://par.perl.org/.
        Documentations have been changed to link to it.

  - Bug Fixes

      - Tk applications can now properly access xpm/xbm files
        with Tk->findINC.

      - On Win32, pp-generated executables could not start from
        Explorer, if its path contains space characters.  Fixed.

      - On Win32, pp-generated executables used to leave around an
        empty directory in $ENV{TEMP}.  It is now properly rmdir'ed.

      - Some systems (notably OpenBSD and Debian) does not put their
        libperl.so in the default location, which breaks the build
        process; now searches inside $ENV{$Config{ldlibpthname}} and
        $Config{libpth} to find it.

0.72  2003-08-02

  - New Features

      - CHECK and INIT blocks in programs inside PAR are now supported.

  - Bug Fixes

      - Two debug statements were mistakenly left in the source,
        resulting in "trying to get rid of /tmp/par_priv.xxxx.tmp"
        messages.

      - Building on Linux with GCC 3.2.2 was failing due to massive
        heap required for my_perl.c.  Fixed by splitting it into 3k
        chunks.

      - Depends on Module::ScanDeps 0.21; it supports utf8 on Perl 5.6.1
        and can significantly reduce executable file size by eliminating
        unneccessary shared libraries.

0.71  2003-07-30

  - Bug Fixes

      - A nasty data-loss bug has been uncovered immediately after the
        previous release; it only affects Windows platforms, and may
        cause all files to be erased under the current root (\) directory.

      - Building on Red Hat linux was failing, with error message that
        says "my_perl not declared".  This has since been fixed.

0.70  2003-07-29

  - New Features

      - On machines with shared libperl, "pp" now makes truly stand-alone
        executables; the old behaviour is available with "pp --dependent".

      - Under Windows NT/2000/XP, "pp --icon=name.ico" now changes the icon
        for the generated executable; otherwise, a default "white camel"
        icon is used.

      - "use PAR 'http://example.com/foo.par'" now works, as does
        "perl -MPAR -Ihttp://example.com/foo.par".

      - PAR::Dist is now a mandatory prerequisite, which provides
        functions to turn any CPAN distribution into a PAR distribution,
        as well as to install, uninstall, sign and verify such files.

      - Integrated PAR::Dist into "par.pl" and "parl".  For example,
        "parl -i Foo-0.01-i386-freebsd-5.8.0.par" installs a PAR
        distribution; "parl -v out.exe" verifies a digitally signed
        executable generated by "pp --sign".

      - A new option, "pp --multiarch", lets you generate PAR files
        that can work on several architectures.

      - "pp --sign" now adds digital signatures to generated executables
        and PAR files.

      - PAR files may now (recursively) contain other PAR files inside
        their par/ directories.

      - shlib/ and par/ directories inside PAR files can now contain
        architecture- and perl-version-specific subdirectories.

      - The "Cross-Platform Packaging and Deployment with PAR" tutorial
        is now online as http://www.autrijus.org/par-tutorial/.

  - Bug Fixes

      - MANIFEST.SKIP was broken on Win32.

      - C compilers that doesn't handle long line well can now
        compile PAR.

      - DLL files inside the same auto/ library as XS modules
        was not properly extracted and loaded.  This specifically
        affects Win32.

      - Because parl's @INC is '.', pp-generated executables may
        miss IO.dll and other shared libraries since they couldn't
        be correctly found in @INC.

0.69  2003-05-31

  - New Features

      - Under Perl 5.8, "pp -p" now works with Apache::PAR.
        See http://aut.dyndns.org/par-tutorial/slide018.html for
        a simple example.

      - "pp -M filename" now adds "filename" to /, not /lib/,
        unless filename ends in (pm|ix|al).  This makes it
        possible to bundle "web.conf" needed by Apache::PAR.

      - "pp -l" now searchs in system library paths, and
        appends "lib" / prepends ".$dl_ext" where necessary.

  - Bug Fixes

      - PAR segfaults on some Unix platforms due to a NULL pointer
        used in mktmpdir.c.  Fixed.

      - "pp -o out.par -p -e '...'" now honors -o; previously
        it used "a.out.par" anyway.

      - Inhibited spurious uninitialized warnings under -w in the
        POD-stripping code.

      - Win32 did not properly cleans up PAR_TEMP directory, resulting
        in failure for executables that reused the same PID.  Fixed.

0.68  2003-05-26

  - New Features

      - New 'pp -l' option to pack additional shared libraries (DLLs).

      - POD-stripped libraries inside PAR files now have #line directives
        inserted, so they report the original line numbers on failure.

      - PAR files generated by 'pp' now has a MANIFEST file that can be
        viewed by Gecko-based browsers with Javascript turned on, e.g.:
        jar:http://aut.dyndns.org/par/test.par!/MANIFEST

  - Bug Fixes

      - Each pp-executable instance now creates its own PAR_TEMP directory;
        this avoids permission errors when multiple users run the same binary.
        As a consequence, PAR_CLEARTEMP is now set to "1" by default.

      - Newer versions of shared Zlib library no longer causes "pp" to
        generate broken executables.

      - Fixed dynamic loading on Cygwin was failing due to missing +x mode.

      - Like "use lib", "use PAR 'name.par'" now unshift()s instead of push()es
        into @INC.  Same applies for "par.pl -A" and "parl -A".

      - Fixed building on ActivePerl 626 and below due to a missing $Config{ld}.

0.67  2003-04-01

  - New Features

      - PAR now works on Cygwin and MinGW/MSYS.

      - Globbing support in PAR::import(): use PAR "/path/*.pm";

      - New license clarification messages added to POD and 'pp -V'.

      - All 'pp' options now has a short form (-o) and a long form (--output).

      - Revamped documentation for 'pp'.

      - New -g (--gui) flag for 'pp' to build console-less Win32 executables.

  - Bug Fixes

      - Building on Darwin Perl 5.6.0 was broken with 'cc -s'.

      - Building on 5.6.0 was broken due to bad 'base.pm'.

      - Win32 Tk::Widget autoloading was broken due to a binmode() bug.

      - IPC::Run was pod-stripped incorrectly.  Fixed.

      - Depends on Module::ScanDeps 0.19, which supports utf8 and .ph files.

      - Better AutoInstall support, which uses 'sudo' where necessary.

0.66  2003-03-20

  - New Features

      - Adds PAR::Intro, a PODified version of the online presentation.

      - Adds App::Packer::Backend::PAR, a bridge between PAR and App::Packer.

      - Scripts and modules are now searched in "/" last, instead of first.

      - Experimental patch for packing shared libraries via "pp -l".

      - HTTP fetching of precompiled packages in addition to FTP.

  - Bug Fixes

      - Makefile.PL now downloads precompiled packages only if needed.

      - AutoInstall has been made to work for an easier installation.

      - The redundant "parl.exe.bat" is no longer created on Win32.
      - Pre-0.63 PARs used to leave broken .dll in TEMP; now they're cleaned.

      - "pp c:\something.pl" no longer treats c: as a relative path.

      - "pp -I dir" now searches 'dir' first, instead of last.

      - "pp" was broken on Perl 5.6.0 due to => stringification bugs.

      - Support for Tk::Widget autoloading has been added.

      - "parl" was not stripped if "gcc" was invoked as "cc"; fixed.

      - On a machine with multiple "parl"s, "pp" now uses the correct one.

      - File::Temp was missing as a dependency.

  - Known Issues

      - Cygwin support is still broken.

      - PAR does not include utf8_heavy.pl nor unicore/* for scripts that
        has "use utf8;".  This has since been fixed by Module::ScanDeps 0.18.

0.65  2003-03-09

  This release comes with several significant improvements:

  - Automatic binary installation

      Previously, users without a C compiler cannot build the 'parl'
      executable, and is therefore unable to create self-contained
      binaries using 'pp'.

      Now, if there is a binary package available for that architecture
      under my CPAN directory, the Makefile.PL script will automatically
      fetch it, unpack into blib/, and the installation will continue as
      normal, resulting in a fully-functional 'pp'.

      This feature is part of the soon-to-be-released Module::Install
      framework; it will greatly benefit all CPAN authors with non-pure-perl
      distributions.

  - POD stripping

      Packages generated with 'pp' will now strip POD sections from all
      packed dependencies (your own scripts is unaffected); all binary
      executables will save at least 276732 bytes, with additional ~20%
      saving in additional packed dependencies.

      You can turn off this feature with the PAR_VERBATIM environment
      variable.

  - XS Incompatibility solved

      Because 'pp'-generated executables includes some fixed version of
      shared libraries (IO, Zlib, etc), they used to break when the
      target system has different version of shared libraries.

      Now PAR::Heavy intercepts DynaLoader::dl_expandspec to always prefer
      the library inside the PAR file, so this issue is resolved.

  - 5.6.1 Reclaimed

      Thanks to Sisyphus and various others, building on Perl 5.6.1
      (with its old ExtUtils::MakeMaker and lack of PTHREAD_ATFORK)
      now works again.

0.64  2003-03-02

  - New Features

      - The t/0-signature.t test is re-enabled for people using my
        Module::Signature to verify the module's OpenPGP signature.

      - This release is the first distribution on CPAN to use the
        Module::Install framework, which is a stand-alone, extensible
        drop-in replacement for ExtUtils::MakeMaker that needs no
        extra action/prerequisites for end users.

  - Bug Fixes

      - Dynamic loading on Win32 was broken, due to a binmode() bug
        reported by Bill Atkins, D. Menzel and others.

      - Building on Win32 in directory names that contain spaces
        did not work.

0.63  2003-02-06

  - Bug Fixes

      - The 'parl' binary (which replaces the old 'par' or 'par.exe')
        didn't work properly when bundling perl modules for self-
        contained executables, rendering 'pp' useless on machines
        without core perl.
